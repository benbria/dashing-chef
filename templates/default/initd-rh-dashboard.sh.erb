#!/bin/bash
#
# This file was generated by Chef for <%= node['fqdn'] %>.
# Do not modify this file by hand!
#
# <%= @service_name %> - Startup script for the Dashing application
#
# chkconfig: 345 90 10
# description: rhel init script for <%= @service_name %>
#

# Source Red Hat function library
. /etc/rc.d/init.d/functions

# Must be a valid filename
NAME="<%= @service_name %>"
DASHING_DIR="<%= @dashboard_path %>"
PIDFILE="$DASHING_DIR/$NAME.pid"

DASHING_PORT=<%= @dashboard_port %>
DAEMON=/usr/sbin/dashing-service
DAEMON_OPTS="start -d -e production -p $DASHING_PORT -P $PIDFILE --tag $NAME -D"

RUNUSER=<%= node['dashing']['user'] %>
RUNGROUP=<%= node['dashing']['group'] %>

function checkuser() {
  if [[ $UID != 0 ]]; then
    if [[ `whoami` != "$RUNUSER" ]]; then
      echo "$1 must be run as root or $RUNUSER"
      exit 1
    fi
  fi
}

start() {
  echo $"Starting $NAME"
  cd $DASHING_DIR
  daemon --user $RUNUSER $DAEMON $DAEMON_OPTS
  RETVAL=$?
  echo
}

stop() {
  echo $"Stopping $NAME: "
  killproc -p $PIDFILE $NAME
  RETVAL=$?
  [ $RETVAL = 0 ] && success || failure
  echo
}

force_stop() {
  echo -n $"Force stopping $NAME: "

  __get_status
  RETVAL=$?

  if [ $RETVAL -ne 0 ]; then
    echo
    echo -n $"$NAME is not running"
    RETVAL=1
    failure

  else
    killproc -p $PIDFILE $NAME -KILL
    RETVAL=$?
    rm -f $PIDFILE
  fi

  echo
}

restart() {
  stop
  start
}

force_restart() {
  force_stop
  start
}

get_status() {
  status -p $PIDFILE $NAME
  RETVAL=$?
  return $RETVAL
}

__get_status() {
  status -p $PIDFILE $NAME >/dev/null
  RETVAL=$?
  return $RETVAL
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  force-stop)
    force_stop
    ;;
  restart)
    restart
    ;;
  force-restart)
    force_restart
    ;;
  status)
    get_status
    ;;
  *)
    echo $"Usage: $0 {start|stop|force-stop|restart|force-restart|status}"
    RETVAL=1
    ;;
esac

exit $RETVAL
